kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    connecthing.io/microservice-uuid: MS_UUID
    davra.com/microservice-uuid: MS_UUID
  name: smart-grid-v2
  labels:
    app: smart-grid
    version: v2
    app.kubernetes.io/component: smart-grid
    app.kubernetes.io/instance: smart-grid
    app.kubernetes.io/name: smart-grid
    app.kubernetes.io/part-of: smart-grid-app
    connecthing.io/microservice: "true"
    connecthing.io/microservice-deployment: production
    connecthing.io/tenantId: test2
    davra.com/microservice-UUID: MS_UUID
    davra.com/microservice-deployment-label: production
    davra.com/tenantId: test2
spec:
  replicas: 1
  selector:
    matchLabels:
      davra.com/microservice-UUID: MS_UUID
  template:
    metadata:
      annotations:
        connecthing.io/microservice-uuid: MS_UUID
        davra.com/microservice-uuid: MS_UUID
      labels:
        app: smart-grid
        version: v2
        deployment: smart-grid
        connecthing.io/microservice: "true"
        connecthing.io/tenantId: test2
        davra.com/microservice-UUID: MS_UUID
        davra.com/microservice-deployment-label: production
        davra.com/tenantId: test2
        name: smart-grid-v2
    spec:
      containers:
        - name: smart-grid-v2
          image: docker.io/davradocker/pxc-poc-sample-microservice:2.0.0
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          env:
            - name: KAFKA_HOST
              value: kafka.default:9092
            - name: IoT_DATA_TOPIC_NAME
              value: test2.ruban-iotdata
            - name: DEVICE_UPDATES_TOPIC_NAME
              value: test2.device-updates
            - name: TWIN_UPDATES_TOPIC_NAME
              value: test2.twin-updates
            - name: TWIN_TYPE_UPDATES_TOPIC_NAME
              value: test2.twintype-updates
            - name: KAFKA_CONSUMER_GROUP_ID
              value: MS_UUID
          volumeMounts:
            - mountPath: /etc/connecthing-api
              name: connecthing-api-secret
            - mountPath: /etc/davra/tls
              name: client-cert
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      imagePullSecrets: []
      volumes:
        - name: connecthing-api-secret
          secret:
            defaultMode: 420
            secretName: MS_UUID
        - name: client-cert
          secret:
            defaultMode: 420
            secretName: MS_UUID-client-cert
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
  paused: false
